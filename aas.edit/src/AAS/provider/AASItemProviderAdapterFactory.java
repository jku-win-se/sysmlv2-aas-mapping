/**
 */
package AAS.provider;

import AAS.util.AASAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class AASItemProviderAdapterFactory extends AASAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public AASItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.AssetAdministrationShell} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssetAdministrationShellItemProvider assetAdministrationShellItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.AssetAdministrationShell}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssetAdministrationShellAdapter() {
		if (assetAdministrationShellItemProvider == null) {
			assetAdministrationShellItemProvider = new AssetAdministrationShellItemProvider(this);
		}

		return assetAdministrationShellItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.LangString} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LangStringItemProvider langStringItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.LangString}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLangStringAdapter() {
		if (langStringItemProvider == null) {
			langStringItemProvider = new LangStringItemProvider(this);
		}

		return langStringItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.AdministrativeInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdministrativeInformationItemProvider administrativeInformationItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.AdministrativeInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdministrativeInformationAdapter() {
		if (administrativeInformationItemProvider == null) {
			administrativeInformationItemProvider = new AdministrativeInformationItemProvider(this);
		}

		return administrativeInformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Identifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdentifierItemProvider identifierItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Identifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdentifierAdapter() {
		if (identifierItemProvider == null) {
			identifierItemProvider = new IdentifierItemProvider(this);
		}

		return identifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Reference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceItemProvider referenceItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Reference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceAdapter() {
		if (referenceItemProvider == null) {
			referenceItemProvider = new ReferenceItemProvider(this);
		}

		return referenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Key} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyItemProvider keyItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Key}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyAdapter() {
		if (keyItemProvider == null) {
			keyItemProvider = new KeyItemProvider(this);
		}

		return keyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Security} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SecurityItemProvider securityItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Security}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSecurityAdapter() {
		if (securityItemProvider == null) {
			securityItemProvider = new SecurityItemProvider(this);
		}

		return securityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.AccessControlPolicyPoints} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessControlPolicyPointsItemProvider accessControlPolicyPointsItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.AccessControlPolicyPoints}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessControlPolicyPointsAdapter() {
		if (accessControlPolicyPointsItemProvider == null) {
			accessControlPolicyPointsItemProvider = new AccessControlPolicyPointsItemProvider(this);
		}

		return accessControlPolicyPointsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.AccessControl} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessControlItemProvider accessControlItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.AccessControl}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessControlAdapter() {
		if (accessControlItemProvider == null) {
			accessControlItemProvider = new AccessControlItemProvider(this);
		}

		return accessControlItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Submodel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubmodelItemProvider submodelItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Submodel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubmodelAdapter() {
		if (submodelItemProvider == null) {
			submodelItemProvider = new SubmodelItemProvider(this);
		}

		return submodelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Endpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndpointItemProvider endpointItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Endpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndpointAdapter() {
		if (endpointItemProvider == null) {
			endpointItemProvider = new EndpointItemProvider(this);
		}

		return endpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.NodeId} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeIdItemProvider nodeIdItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.NodeId}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeIdAdapter() {
		if (nodeIdItemProvider == null) {
			nodeIdItemProvider = new NodeIdItemProvider(this);
		}

		return nodeIdItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Certificate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CertificateItemProvider certificateItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Certificate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCertificateAdapter() {
		if (certificateItemProvider == null) {
			certificateItemProvider = new CertificateItemProvider(this);
		}

		return certificateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.AssetInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssetInformationItemProvider assetInformationItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.AssetInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssetInformationAdapter() {
		if (assetInformationItemProvider == null) {
			assetInformationItemProvider = new AssetInformationItemProvider(this);
		}

		return assetInformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.IdentifierKeyValuePair} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdentifierKeyValuePairItemProvider identifierKeyValuePairItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.IdentifierKeyValuePair}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdentifierKeyValuePairAdapter() {
		if (identifierKeyValuePairItemProvider == null) {
			identifierKeyValuePairItemProvider = new IdentifierKeyValuePairItemProvider(this);
		}

		return identifierKeyValuePairItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.File} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileItemProvider fileItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.File}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileAdapter() {
		if (fileItemProvider == null) {
			fileItemProvider = new FileItemProvider(this);
		}

		return fileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Asset} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssetItemProvider assetItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Asset}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssetAdapter() {
		if (assetItemProvider == null) {
			assetItemProvider = new AssetItemProvider(this);
		}

		return assetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.AASEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AASEndpointItemProvider aasEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.AASEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAASEndpointAdapter() {
		if (aasEndpointItemProvider == null) {
			aasEndpointItemProvider = new AASEndpointItemProvider(this);
		}

		return aasEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Entity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityItemProvider entityItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Entity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityAdapter() {
		if (entityItemProvider == null) {
			entityItemProvider = new EntityItemProvider(this);
		}

		return entityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.RelationshipElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationshipElementItemProvider relationshipElementItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.RelationshipElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationshipElementAdapter() {
		if (relationshipElementItemProvider == null) {
			relationshipElementItemProvider = new RelationshipElementItemProvider(this);
		}

		return relationshipElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Operation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationItemProvider operationItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Operation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationAdapter() {
		if (operationItemProvider == null) {
			operationItemProvider = new OperationItemProvider(this);
		}

		return operationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.SubmodelElementCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubmodelElementCollectionItemProvider submodelElementCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.SubmodelElementCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubmodelElementCollectionAdapter() {
		if (submodelElementCollectionItemProvider == null) {
			submodelElementCollectionItemProvider = new SubmodelElementCollectionItemProvider(this);
		}

		return submodelElementCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Property} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyItemProvider propertyItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Property}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyAdapter() {
		if (propertyItemProvider == null) {
			propertyItemProvider = new PropertyItemProvider(this);
		}

		return propertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.ReferenceElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceElementItemProvider referenceElementItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.ReferenceElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceElementAdapter() {
		if (referenceElementItemProvider == null) {
			referenceElementItemProvider = new ReferenceElementItemProvider(this);
		}

		return referenceElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.BasicEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BasicEventItemProvider basicEventItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.BasicEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBasicEventAdapter() {
		if (basicEventItemProvider == null) {
			basicEventItemProvider = new BasicEventItemProvider(this);
		}

		return basicEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Range} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeItemProvider rangeItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Range}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRangeAdapter() {
		if (rangeItemProvider == null) {
			rangeItemProvider = new RangeItemProvider(this);
		}

		return rangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Capability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityItemProvider capabilityItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Capability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityAdapter() {
		if (capabilityItemProvider == null) {
			capabilityItemProvider = new CapabilityItemProvider(this);
		}

		return capabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.ConceptDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConceptDescriptionItemProvider conceptDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.ConceptDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConceptDescriptionAdapter() {
		if (conceptDescriptionItemProvider == null) {
			conceptDescriptionItemProvider = new ConceptDescriptionItemProvider(this);
		}

		return conceptDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.LangStringSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LangStringSetItemProvider langStringSetItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.LangStringSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLangStringSetAdapter() {
		if (langStringSetItemProvider == null) {
			langStringSetItemProvider = new LangStringSetItemProvider(this);
		}

		return langStringSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.DataSpecificationIEC61360} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataSpecificationIEC61360ItemProvider dataSpecificationIEC61360ItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.DataSpecificationIEC61360}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataSpecificationIEC61360Adapter() {
		if (dataSpecificationIEC61360ItemProvider == null) {
			dataSpecificationIEC61360ItemProvider = new DataSpecificationIEC61360ItemProvider(this);
		}

		return dataSpecificationIEC61360ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.ValueReferencePairType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueReferencePairTypeItemProvider valueReferencePairTypeItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.ValueReferencePairType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueReferencePairTypeAdapter() {
		if (valueReferencePairTypeItemProvider == null) {
			valueReferencePairTypeItemProvider = new ValueReferencePairTypeItemProvider(this);
		}

		return valueReferencePairTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.View} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewItemProvider viewItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.View}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViewAdapter() {
		if (viewItemProvider == null) {
			viewItemProvider = new ViewItemProvider(this);
		}

		return viewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.MultiLanguageProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiLanguagePropertyItemProvider multiLanguagePropertyItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.MultiLanguageProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiLanguagePropertyAdapter() {
		if (multiLanguagePropertyItemProvider == null) {
			multiLanguagePropertyItemProvider = new MultiLanguagePropertyItemProvider(this);
		}

		return multiLanguagePropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.AasModelRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AasModelRootItemProvider aasModelRootItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.AasModelRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAasModelRootAdapter() {
		if (aasModelRootItemProvider == null) {
			aasModelRootItemProvider = new AasModelRootItemProvider(this);
		}

		return aasModelRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Extension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionItemProvider extensionItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Extension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionAdapter() {
		if (extensionItemProvider == null) {
			extensionItemProvider = new ExtensionItemProvider(this);
		}

		return extensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.Qualifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QualifierItemProvider qualifierItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.Qualifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQualifierAdapter() {
		if (qualifierItemProvider == null) {
			qualifierItemProvider = new QualifierItemProvider(this);
		}

		return qualifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link AAS.AnnotatedRelationshipElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotatedRelationshipElementItemProvider annotatedRelationshipElementItemProvider;

	/**
	 * This creates an adapter for a {@link AAS.AnnotatedRelationshipElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotatedRelationshipElementAdapter() {
		if (annotatedRelationshipElementItemProvider == null) {
			annotatedRelationshipElementItemProvider = new AnnotatedRelationshipElementItemProvider(this);
		}

		return annotatedRelationshipElementItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (assetAdministrationShellItemProvider != null) assetAdministrationShellItemProvider.dispose();
		if (langStringItemProvider != null) langStringItemProvider.dispose();
		if (administrativeInformationItemProvider != null) administrativeInformationItemProvider.dispose();
		if (identifierItemProvider != null) identifierItemProvider.dispose();
		if (referenceItemProvider != null) referenceItemProvider.dispose();
		if (keyItemProvider != null) keyItemProvider.dispose();
		if (securityItemProvider != null) securityItemProvider.dispose();
		if (accessControlPolicyPointsItemProvider != null) accessControlPolicyPointsItemProvider.dispose();
		if (accessControlItemProvider != null) accessControlItemProvider.dispose();
		if (submodelItemProvider != null) submodelItemProvider.dispose();
		if (endpointItemProvider != null) endpointItemProvider.dispose();
		if (nodeIdItemProvider != null) nodeIdItemProvider.dispose();
		if (certificateItemProvider != null) certificateItemProvider.dispose();
		if (assetInformationItemProvider != null) assetInformationItemProvider.dispose();
		if (identifierKeyValuePairItemProvider != null) identifierKeyValuePairItemProvider.dispose();
		if (fileItemProvider != null) fileItemProvider.dispose();
		if (assetItemProvider != null) assetItemProvider.dispose();
		if (aasEndpointItemProvider != null) aasEndpointItemProvider.dispose();
		if (entityItemProvider != null) entityItemProvider.dispose();
		if (relationshipElementItemProvider != null) relationshipElementItemProvider.dispose();
		if (operationItemProvider != null) operationItemProvider.dispose();
		if (submodelElementCollectionItemProvider != null) submodelElementCollectionItemProvider.dispose();
		if (propertyItemProvider != null) propertyItemProvider.dispose();
		if (referenceElementItemProvider != null) referenceElementItemProvider.dispose();
		if (basicEventItemProvider != null) basicEventItemProvider.dispose();
		if (rangeItemProvider != null) rangeItemProvider.dispose();
		if (capabilityItemProvider != null) capabilityItemProvider.dispose();
		if (conceptDescriptionItemProvider != null) conceptDescriptionItemProvider.dispose();
		if (langStringSetItemProvider != null) langStringSetItemProvider.dispose();
		if (dataSpecificationIEC61360ItemProvider != null) dataSpecificationIEC61360ItemProvider.dispose();
		if (valueReferencePairTypeItemProvider != null) valueReferencePairTypeItemProvider.dispose();
		if (viewItemProvider != null) viewItemProvider.dispose();
		if (multiLanguagePropertyItemProvider != null) multiLanguagePropertyItemProvider.dispose();
		if (aasModelRootItemProvider != null) aasModelRootItemProvider.dispose();
		if (extensionItemProvider != null) extensionItemProvider.dispose();
		if (qualifierItemProvider != null) qualifierItemProvider.dispose();
		if (annotatedRelationshipElementItemProvider != null) annotatedRelationshipElementItemProvider.dispose();
	}

}
